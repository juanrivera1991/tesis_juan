---
title: "Exploración de datos"
format: html
---

```{r include=FALSE}
# Para que en el render no se vean los códigos: echo = F
knitr::opts_chunk$set(echo = F, warning = FALSE, message = FALSE)
```

Carga de paquetes

```{r}
pacman::p_load(tidyverse, skimr, rio, janitor, GGally, huxtable)
```
```{r}
library(ggplot2)
```

Importar datos desde la carpeta de archivos cargados (armar un proyecto previo)

```{r}
dat <- import("data/datos.xlsx") %>% clean_names()  
# clean_names transforma todas la mayúsculas en minúsculas y todos los espacios en guiones bajos
```

```{r}
head(dat) |> 
  as_hux() %>% 
  theme_article() %>% 
  set_font_size(9) %>%    
  set_top_padding(.2) %>%
  set_bottom_padding(.2)
```

Breve descripción de variables:

ph: peso hectolítrico proteina: proteins (%) se: sm:

Exploración de las variables respuestas de nuestro interés

```{r}
dat %>% 
  select(ph,proteina,se,em,
         sm, #mc,
         altura,
         gramos_m, kg_m2,
         pmg,ba,ic,espigas_m,espiguillas_espiga,
         granos_espiga, peso_granos_espiga) |> 
  skim()
```

## Correlacion entre las variables

```{r, eval=FALSE}
dat %>% 
  select(ph,proteina,se,em,
         sm, #mc,
         altura,
         gramos_m, kg_m2,
         pmg,ba,ic,espigas_m,espiguillas_espiga,
         granos_espiga, peso_granos_espiga) |> 
ggpairs()

# ggsave(last_plot(), file="plots/corr.png", scale=1.5, h=10, w=10)
```

![](plots/corr.png)

## Análisis multivariado

```{r}
pacman::p_load(FactoMineR, factoextra)
```

```{r}
dat_sum <- dat |> 
  group_by(participante) |> 
  select(ph,proteina,se,em,
         sm, mc,
         altura,
         gramos_m, kg_m2,
         pmg,ba,ic,espigas_m,espiguillas_espiga,
         granos_espiga, peso_granos_espiga) |>
  summarise_all(.funs="mean") |> 
  column_to_rownames(var="participante")
```

```{r}
#http://factominer.free.fr/factomethods/principal-components-analysis.html
PCA(dat_sum, scale.unit=TRUE, ncp=5, graph=T)
#ggsave(last_plot(), file="plots/Análisis2.png", w=800, h=400, units="mm", dpi=400)
```


Verificamos la lista de participantes

```{r}
dat |> 
  count(participante) |> 
  as_hux() %>% 
  theme_article() %>% 
  set_font_size(9) %>%    
  set_top_padding(.2) %>%
  set_bottom_padding(.2)
```

## Rinde por m2

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, kg_m2, mean) , y=kg_m2) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="genotipo", y="kg/4.18m2")

#ggsave(last_plot(), h=8, file="plots/rinde.png")
```

## PH


```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, ph, mean) , y=ph) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Peso hectolítrico")

#ggsave(last_plot(), h=8, file="plots/ph.png")
```
## Proteína 

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, proteina, mean) , y=proteina) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Proteína (%)")

#ggsave(last_plot(), h=8, file="plots/proteína.png")
```
## SE

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, se, mean) , y=se) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Siembra-Emergencia (días)")

#ggsave(last_plot(), h=8, file="plots/se.png")
```
## SM

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, sm, mean) , y=sm) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Siembra-Madurez (días)")

#ggsave(last_plot(), h=8, file="plots/sm.png")
```
## EM

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, em, mean) , y=em) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Emergencia-Madurez (días)")

#ggsave(last_plot(), h=8, file="plots/em.png")
```
## MC

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, mc, mean) , y=mc) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Madurez-Cosecha (días)")

#ggsave(last_plot(), h=8, file="plots/mc.png")
```
## Altura

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, altura, mean) , y=altura) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Altura (cm)")

#ggsave(last_plot(), h=8, file="plots/altura.png")
```

## Gramos/m lineal

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, gramos_m, mean) , y=gramos_m) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Peso de granos/m (g/m)")

#ggsave(last_plot(), h=8, file="plots/gramos_m.png")
```

## Rinde Kg/m2

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, kg_m2, mean) , y=kg_m2) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Rendimiento (Kg/4.18m2)")

#ggsave(last_plot(), h=8, file="plots/kg_m2.png")
```
## Peso de mil granos


```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, pmg, mean) , y=pmg) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Peso de mil granos (g)")

#ggsave(last_plot(), h=8, file="plots/pmg.png")
```

## Biomasa aérea

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, ba, mean) , y=ba) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Biomasa aérea (g)")

#ggsave(last_plot(), h=8, file="plots/ba.png")
```
## Índice de cosecha

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, ic, mean) , y=ic) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Índice de cosecha (%)")

#ggsave(last_plot(), h=8, file="plots/ic.png")
```
## Espigas/m lineal

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, espigas_m, mean) , y=espigas_m) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Espigas/m lineal")

#ggsave(last_plot(), h=8, file="plots/espigas_m.png")
```
## Espiguillas/espiga

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, espiguillas_espiga, mean) , y=espiguillas_espiga) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Nro. de espiguillas/espiga")

#ggsave(last_plot(), h=8, file="plots/espiguillas_espiga.png")
```
## Granos/espiga

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, granos_espiga, mean) , y=granos_espiga) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Nro. de granos/espiga")

#ggsave(last_plot(), h=8, file="plots/granos_espiga.png")
```
## Peso de granos/espiga

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, peso_granos_espiga, mean) , y=peso_granos_espiga) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Peso de granos/espiga (g)")

#ggsave(last_plot(), h=8, file="plots/peso_granos_espiga.png")
```

