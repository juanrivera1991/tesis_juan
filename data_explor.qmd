---
title: "Exploración de datos"
format: html
---
```{r include=FALSE}
# Para que en el render no se vean los códigos: echo = F
knitr::opts_chunk$set(echo = F, warning = FALSE, message = FALSE)
```



Carga de paquetes

```{r}
pacman::p_load(tidyverse, skimr, rio, janitor, GGally, huxtable, 
               MASS, relaimpo, emmeans, multcomp)

conflicted::conflict_prefer("select", "dplyr")
conflicted::conflict_prefer("filter", "dplyr")
```
Importar datos desde la carpeta de archivos cargados (armar un proyecto previo)

```{r}
dat <- import("data/datos.xlsx") %>% clean_names() |> select(-contains("cv")) |> 
  mutate_at(vars(participante, bloque), as.factor) 
```

```{r}
glimpse(dat)
```

##Breve descripción de variables:

PH	: peso hectolitrico (kg/100l)
Proteína	(%)
SE	: siembra-emergencia (dias)
SM	siembra-madurez (dias)
EM	: emergencia- madurez (dias)
MC	: madurez-cosecha (dias)
Altura	
Orientación	
Vuelco	
gramos_m	: cantidad de granos/ m lineal
kg_m2	: rinde en kg/m2
PMG	: peso de mil granos
BA	: biomasa aerea (g)
IC	: indice de cosecha (%)
Espigas_m	: cantidad de espiguillas/ m lineal
Espiguillas_espiga	: cantidad de espiguillas/ espiga
granos_espiga	: cantidad de granos/ espiga
Peso_granos_espiga	: peso de granos/espiga


Exploración de las variables respuestas de nuestro interés

```{r}
dat %>% 
  select(ph,proteina,se,em,
         sm, #mc,
         altura,
         gramos_m, kg_m2,
         pmg,ba,ic,espigas_m,espiguillas_espiga,
         granos_espiga, peso_granos_espiga) |> 
  skim()
```

## Correlacion entre las variables

```{r, eval=FALSE}
dat %>% 
  select(ph,proteina,se,em,
         sm, #mc,
         altura,
         gramos_m, kg_m2,
         pmg,ba,ic,espigas_m,espiguillas_espiga,
         granos_espiga, peso_granos_espiga) |> 
ggpairs()

# ggsave(last_plot(), file="plots/corr.png", scale=1.5, h=10, w=10)
```

![](plots/corr.png)

## Multivariado

```{r}
pacman::p_load(FactoMineR, factoextra)
```

```{r}
dat_sum <- dat |> 
  group_by(participante) |> 
  select(ph,proteina,se,em,
         sm, mc,
         altura,
         gramos_m, kg_m2,
         pmg,ba,ic,espigas_m,espiguillas_espiga,
         granos_espiga, peso_granos_espiga) |>
  summarise_all(.funs="mean") |> 
  column_to_rownames(var="participante")
```

```{r}
#http://factominer.free.fr/factomethods/principal-components-analysis.html
res.pca <- PCA(dat_sum, scale.unit=TRUE, ncp=5, graph=F)
#ggsave(last_plot(), file="plots/Análisis2.png", w=800, h=400, units="mm", dpi=400)
dimdesc(res.pca, axes=c(1,2))

```


Como se relacionan las variables entre si

```{r eval=FALSE}
fviz_pca_var(res.pca, col.var = "black")
# ggsave(last_plot(), file="plots/multivar_variables.png", w=8, h=8)
```

![](plots/multivar_variables.png)

Como se mapean los participantes

```{r eval=FALSE}
fviz_pca_ind(res.pca, 
             repel = TRUE # Avoid text overlapping (slow if many points)
             )

ggsave(last_plot(), file="plots/multivar_particip.png", w=8, h=8)
```

![](plots/multivar_particip.png)

Analisis de proximidad entre los participantes (que tan parecidos son)

```{r}
dat_sum %>%
  scale() %>%                           # Scale the data
  dist() %>%                            # Compute distance matrix
  hclust(method = "ward.D2") %>%        # Hierarchical clustering
  fviz_dend(cex = 0.5, k = 4, palette = "jco") # Visualize and cut 
                                              # into 4 groups
```


Verificamos la lista de participantes

```{r}
dat |> 
  count(participante) |> 
  as_hux() %>% 
  theme_article() %>% 
  set_font_size(9) %>%    
  set_top_padding(.2) %>%
  set_bottom_padding(.2)
```

## Univariado

### Rinde por m2

```{r, eval=FALSE}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, kg_m2, mean) , y=(kg_m2/4.18)*1000) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="genotipo", y="g/m2")

#ggsave(last_plot(), h=8, file="plots/kg_m2.png")
```

![](plots/kg_m2.png)


### PH


```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, ph, mean) , y=ph) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Peso hectolítrico")

#ggsave(last_plot(), h=8, file="plots/ph.png")
```

![](plots/ph.png)


## Proteína 

```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, proteina, mean) , y=proteina) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Proteína (%)")

#ggsave(last_plot(), h=8, file="plots/proteina.png")
```

![](plots/proteina.png)

## SE

```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, se, mean) , y=se) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Siembra-Emergencia (días)")

#ggsave(last_plot(), h=8, file="plots/se.png")
```

![](plots/se.png)

## SM

```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, sm, mean) , y=sm) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Siembra-Madurez (días)")

#ggsave(last_plot(), h=8, file="plots/sm.png")
```
![](plots/sm.png)

## EM

```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, em, mean) , y=em) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Emergencia-Madurez (días)")

#ggsave(last_plot(), h=8, file="plots/em.png")
```
![](plots/em.png)

## MC

```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, mc, mean) , y=mc) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Madurez-Cosecha (días)")

#ggsave(last_plot(), h=8, file="plots/mc.png")
```
![](plots/mc.png)

## Altura

```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, altura, mean) , y=altura) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Altura (cm)")

#ggsave(last_plot(), h=8, file="plots/altura.png")
```
![](plots/altura.png)

## Gramos/m lineal

```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, gramos_m, mean) , y=gramos_m) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Peso de granos/m (g/m)")

#ggsave(last_plot(), h=8, file="plots/gramos_m.png")
```
![](plots/gramos_m.png)

## Rinde Kg/m2

```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, kg_m2, mean) , y=kg_m2) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Rendimiento (Kg/4.18m2)")

#ggsave(last_plot(), h=8, file="plots/kg_m2.png")
```
![](plots/kg_m2.png)

## Peso de mil granos

```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, pmg, mean) , y=pmg) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Peso de mil granos (g)")

#ggsave(last_plot(), h=8, file="plots/pmg.png")
```
![](plots/pmg.png)

## Biomasa aérea

```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, ba, mean) , y=ba) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Biomasa aérea (g)")

#ggsave(last_plot(), h=8, file="plots/ba.png")
```
![](plots/ba.png)

## Índice de cosecha

```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, ic, mean) , y=ic) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Índice de cosecha (%)")

#ggsave(last_plot(), h=8, file="plots/ic.png")
```
![](plots/ic.png)

## Espigas/m lineal

```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, espigas_m, mean) , y=espigas_m) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Espigas/m lineal")

#ggsave(last_plot(), h=8, file="plots/espigas_m.png")
```
![](plots/espigas_m.png)

## Espiguillas/espiga

```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, espiguillas_espiga, mean) , y=espiguillas_espiga) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Nro. de espiguillas/espiga")

#ggsave(last_plot(), h=8, file="plots/espiguillas_espiga.png")
```
![](plots/espiguillas_espiga.png)

## Granos/espiga

```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, granos_espiga, mean) , y=granos_espiga) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Nro. de granos/espiga")

#ggsave(last_plot(), h=8, file="plots/granos_espiga.png")
```
![](plots/granos_espiga.png)

## Peso de granos/espiga

```{r}
dat |> 
  ggplot() + 
  aes(x=fct_reorder(participante, peso_granos_espiga, mean) , y=peso_granos_espiga) + 
  geom_point()+ 
  stat_summary(fun.data = "mean_sdl", colour = "red", linewidth = .1)+
  coord_flip() + 
  labs(x="Genotipo", y="Peso de granos/espiga (g)")

#ggsave(last_plot(), h=8, file="plots/peso_granos_espiga.png")
```
![](plots/peso_granos_espiga.png)


